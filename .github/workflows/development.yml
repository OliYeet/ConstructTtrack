name: 🔧 Development Workflow

on:
  push:
    branches: [ develop, 'feature/*', 'hotfix/*' ]
  pull_request:
    branches: [ develop ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # Job 1: Quick Development Checks
  dev-checks:
    name: 🚀 Quick Development Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄️ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Quick lint check
        run: pnpm lint:quick

      - name: 🎨 Format check
        run: pnpm format:check

      - name: 🔍 Type check
        run: pnpm type-check

      - name: 🧪 Unit tests
        run: pnpm test:unit --passWithNoTests

  # Job 2: Development Build & Preview
  dev-build:
    name: 🏗️ Development Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: dev-checks
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build development version
        run: pnpm build:dev
        env:
          NODE_ENV: development

      - name: 🚀 Deploy development preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          alias-domains: |
            ${{ github.head_ref }}-constructtrack.vercel.app
          working-directory: ./apps/web

  # Job 3: Code Quality Analysis
  quality-analysis:
    name: 📊 Code Quality Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: dev-checks
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run tests with coverage
        run: pnpm test:coverage

      - name: 📊 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 📊 CodeClimate Coverage
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: pnpm test:coverage
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov

  # Job 4: Dependency Security Check
  security-check:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔒 Audit dependencies
        run: pnpm audit --audit-level moderate

      - name: 🛡️ Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

      - name: 🔍 CodeQL Analysis
        uses: github/codeql-action/init@v2
        uses: github/codeql-action/init@v3

       - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Job 5: API Documentation Check
  api-docs:
    name: 📚 API Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: dev-checks
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📚 Generate API documentation
        run: pnpm docs:generate

      - name: 🔍 Validate OpenAPI spec
        run: pnpm docs:validate

      - name: 📊 API documentation coverage
        run: pnpm docs:coverage

      - name: 📤 Upload API docs
        uses: actions/upload-artifact@v3
        with:
          name: api-documentation
          path: docs/api/

# Job 6: Performance Testing
   performance:
     name: ⚡ Performance Testing
     runs-on: ubuntu-latest
     timeout-minutes: 15
    needs: dev-checks
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/'))
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ⚡ Bundle size analysis
        run: pnpm analyze:bundle

      - name: 🔍 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: 📊 Performance budget check
        run: pnpm test:performance

  # Job 7: Accessibility Testing
  accessibility:
    name: ♿ Accessibility Testing
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: dev-build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ♿ Run accessibility tests
        run: pnpm test:a11y

      - name: 📊 Generate accessibility report
        run: pnpm a11y:report

      - name: 📤 Upload accessibility report
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: reports/accessibility/
